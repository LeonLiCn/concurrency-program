缓存穿透：
    指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果DB层查不到数据则不写到缓存里，这将导致这个不存在的数据
    每次请求都要到DB里去查询，失去了缓存的意义，在流量大时，DB可能就挂了

解决方法：
    1.采用布隆过滤器将有可能的数据都缓存到一个大的bitmap里，一个不存在的数据会被这个bitmap拦截掉，从而避免了对DB的查询压力
    2.如果一个查询返回的数据为空，仍然把它缓存起来，但是它的过期时间很短，最长不超过5min


缓存雪崩：
    指在我们设置缓存时采用了同样的失效时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过大造成雪崩

解决方法：
    可以在原有的失效时间再加一个随机值，这样每一个缓存的的过期时间重复就会降低，就很难发生集体失效的事件


缓存击穿：
    缓存在某个时间点过期的时候，恰好这个时间点对应的key有大量的并发请求过来，这些请求过来发现缓存过期一般都会从后端DB数据加载到缓存，这个时候大的并发请求有可能
    把后端的DB压垮

解决方法：
    1.采用mutex，就是在key失效的时候，不是立即去load DB，而是先使用缓存工具操作(带成功返回的操作)去set一个mutex key，当返回操作成功的时候再进行load DB，
    否则就重试get()
    2.
        (1)永远不过期
        (2)把过期时间存到value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建